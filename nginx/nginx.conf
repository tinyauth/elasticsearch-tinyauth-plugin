worker_processes 1;
error_log /dev/stdout warn;
daemon off;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /usr/local/openresty/nginx/conf/mime.types;
  default_type  application/octet-stream;

  # Let nginx be able to resolve Docker containers
  resolver 127.0.0.11;

  access_log /dev/stdout;

  upstream kibana {
    server kibana:5601;
  }

  server {
    listen 443 default_server;

    ssl on;
    ssl_certificate external/cert.pem;
    ssl_certificate_key external/key.pem;
  
    charset utf-8;

    location /login/static/ {
      alias /srv/static/;
      expires 365;
    }

    location = /login {
      content_by_lua_block {
        local tinyauth = require('resty/tinyauth');
        local client = tinyauth.new("http://tinyauth:5000/api/v1/", "gatekeeper", "keymaster")
        client:handle_login('b9228724')
      }
    }

    location / {
      access_by_lua_block {
        local tinyauth = require('resty/tinyauth');
        local client = tinyauth.new("http://tinyauth:5000/api/v1/", "gatekeeper", "keymaster")

        local auth = client:authorize_token_for_action("AccessKibana")

        if not auth['Authorized'] then
          ngx.redirect('/login')
          return
        end

        if auth['Identity'] then
            ngx.req.set_header('X-User', auth['Identity'])
        end
      }

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass   http://kibana;
    }
  }
}
